name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.25'

    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p dist
        BINARY_NAME=intel-gpu-exporter-${{ steps.version.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}
        go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.VERSION }}" -o dist/${BINARY_NAME} intel_gpu_exporter.go

    - name: Create tarball
      run: |
        cd dist
        BINARY_NAME=intel-gpu-exporter-${{ steps.version.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}
        tar -czf ${BINARY_NAME}.tar.gz ${BINARY_NAME}
        rm ${BINARY_NAME}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Download all artifacts
      uses: actions/download-artifact@v6
      with:
        path: dist/

    - name: Flatten artifacts
      run: |
        mkdir -p release
        find dist/ -name '*.tar.gz' | xargs -I {} cp {} release/

    - name: Generate checksums
      run: |
        cd release
        sha256sum * > checksums.txt

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: Release ${{ steps.version.outputs.VERSION }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          release/*
        body: |
          ## Intel GPU Exporter ${{ steps.version.outputs.VERSION }}
          
          This release includes pre-compiled binaries for Intel Linux platforms.
          
          ### Installation
          
          1. Download the appropriate binary for your platform
          2. Extract the archive: `tar -xzf intel-gpu-exporter-*.tar.gz`
          3. Run the binary: `./intel-gpu-exporter`
          4. Access metrics at http://localhost:8080/metrics
          
          ### Requirements
          
          - Linux system with Intel GPU
          - `intel_gpu_top` command must be available in your PATH
          - Intel GPU with supported drivers
          
          ### Checksums
          
          See `checksums.txt` for SHA256 checksums of all binaries.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}